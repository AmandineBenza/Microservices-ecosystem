version: "3"
services:

  clients-accounts:
    container_name: clients-accounts
    restart: always
    build: ./clients/clients-accounts
    ports:
      - "8081:8080"
    depends_on:
     - kafka
     - mongodb
    links:
     - kafka
     - mongodb

  clients-controller:
    container_name: clients-controller
    restart: always
    build: ./clients/clients-controller
    ports:
      - "8082:8080"
    depends_on:
     - kafka
     - mongodb
    links:
     - kafka
     - mongodb

  clients-orders:
    container_name: clients-orders
    restart: always
    build: ./clients/clients-orders
    ports:
      - "8083:8080"
    depends_on:
     - kafka
     - mongodb
    links:
     - kafka
     - mongodb

  commons-estimation:
    container_name: commons-estimation
    restart: always
    build: ./commons/commons-estimation
    ports : 
      - "8084:8080"
    depends_on:
     - kafka
    links: 
     - kafka
    
  commons-moneyModification:
    container_name: commons-moneyModification
    restart: always
    build: ./commons/commons-moneyModification
    ports : 
      - "8085:8080"
    depends_on:
     - kafka
    links: 
     - kafka

  coursiers-accounts:
    container_name: coursiers-accounts
    restart: always
    build: ./coursiers/coursiers-accounts
    ports:
    - "8086:8080"
    depends_on:
    - mongodb
    - kafka
    links:
    - mongodb
    - kafka

  coursiers-orders:
    container_name: coursiers-orders
    restart: always
    build: ./coursiers/coursiers-orders
    ports:
    - "8087:8080"
    depends_on:
    - mongodb
    - kafka
    links:
    - mongodb
    - kafka

  restaurants-controller:
    container_name: restaurants-controller
    restart: always
    build: ./restaurants/restaurants-controller
    ports:
    - "8088:8080"
    depends_on:
    - mongodb
    - kafka
    links:
    - mongodb
    - kafka

  restaurants-consultation:
    container_name: restaurants-consultation
    restart: always
    build: ./restaurants/restaurants-consultation
    ports:
    - "8089:8080"
    depends_on:
    - mongodb
    - kafka
    links:
    - mongodb
    - kafka

  restaurants-modification:
    container_name: restaurants-modification
    restart: always
    build: ./restaurants/restaurants-modification
    ports:
    - "8090:8080"
    depends_on:
    - mongodb
    - kafka
    links:
    - mongodb
    - kafka

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports: 
      - "27017:27017"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    build: ./kafka
    ports:
      - "9092"
    environment:
  #    KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_LISTENERS: PLAINTEXT://:9092
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
       KAFKA_CREATE_TOPICS: "create-client:1:1,consult-client:1:1,create-order:1:1,create-coursier:1:1,estimate-distance:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: 
      - zookeeper
