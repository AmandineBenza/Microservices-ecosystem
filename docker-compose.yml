version: "3"
services: 
  restaurant-consultation-food:
    container_name: rest_consult_food
    restart: always
    build: ./restaurants/restaurants-consultation/restaurants-consultation-food
    ports : 
      - "8081:8080"
    depends_on:
     - mongodb
    links: 
     - mongodb
  restaurant-consultation-orders:
    container_name: rest_consult_orders
    restart: always
    build: ./restaurants/restaurants-consultation/restaurants-consultation-orders
    ports : 
      - "8082:8080"
    depends_on:
      - mongodb
    links: 
      - mongodb
  # restaurant-modification-food:
  #   container_name: rest_modif_food
  #   restart: always
  #   build: ./restaurants/restaurants-modification/restaurants-modification-food
  #   ports : 
  #     - "8083:8080"
  #   depends_on:
  #    - mongodb
  #   links: 
  #    - mongodb
  restaurant-modification-orders:
    container_name: rest_modif_orders
    restart: always
    build: ./restaurants/restaurants-modification/restaurants-modification-orders
    ports : 
      - "8084:8080"
    depends_on:
     - mongodb
    links: 
     - mongodb
  restaurant-modification-restaurant:
    container_name: rest_modif_restaurant
    restart: always
    build: ./restaurants/restaurants-modification/restaurants-modification-restaurant
    ports : 
      - "8085:8080"
    depends_on:
     - mongodb
    links: 
     - mongodb 
  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports: 
      - "27017:27017" 
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    build: .
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: 
      - zookeeper